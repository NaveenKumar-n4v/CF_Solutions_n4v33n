#include <bits/stdc++.h>
#include <iostream>
// #include <string_view>
#include <string>
using namespace std;
#define endl "\n"
#define ll long long
#define array_size(type) ((char *)(&type+1)-(char*)(&type))
#define MOD 1000000007
// @defin
#define mod 998244353
#ifndef ONLINE_JUDGE
#define debug(x) cerr<<#x<<" "<<x<<endl;
#else
#define debug(x)
#endif
template<typename KeyType, typename v1ueType>
std::pair<KeyType, v1ueType> get_max( const std::map<KeyType, v1ueType>& x ) {
	using pairtype = std::pair<KeyType, v1ueType>;
	return *std::max_element(x.begin(), x.end(), [] (const pairtype & p1, const pairtype & p2) {
		return p1.second < p2.second;
	});
}
// Readme.me // CLUE HIDDEN IN STORY // PATTERN == {Practice}
ll n;
void solve() {
	ll n, k;
	cin >> n >> k;
	string str;
	cin >> str;
	map<char, ll> mp;
	ll cnt1 = 0;
	ll cnt2 = 0;
	for (auto it : str)
	{
		mp[it]++;
	}

	for (auto it : mp)
	{
		cnt1 += (it.second % 2);
		cnt2 += (it.second / 2);
		debug(cnt1)
		debug(cnt2)
	}
	ll v1 = cnt1 + ((cnt2 % k) * 2);
	ll v2 = (cnt2 / k) * 2;
	if (k <= v1)
	{

		v2+=1;
		debug(v2)
	}

	cout << v2 << endl;
}
signed main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("error.txt", "w", stderr);
#endif
	ll t = 1;
	cin >> t;
	while (t--) solve();
	return 0;
}

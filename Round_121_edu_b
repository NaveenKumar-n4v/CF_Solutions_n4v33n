#include <bits/stdc++.h>
#include <iostream>
// #include <string_view>
#include <string>
using namespace std;
#define endl "\n"
#define ll long long
#define array_size(type) ((char *)(&type+1)-(char*)(&type))
#define MOD 1000000007
// @defin
#define mod 998244353
#ifndef ONLINE_JUDGE
#define debug(x) cerr<<#x<<" "<<x<<endl;
#else
#define debug(x)
#endif
template<typename KeyType, typename v1ueType>
std::pair<KeyType, v1ueType> get_max( const std::map<KeyType, v1ueType>& x ) {
	using pairtype = std::pair<KeyType, v1ueType>;
	return *std::max_element(x.begin(), x.end(), [] (const pairtype & p1, const pairtype & p2) {
		return p1.second < p2.second;
	});
}
// Readme.me // CLUE HIDDEN IN STORY // PATTERN == {Practice}

void solve() {
	string s;
	cin >> s;
	bool fk = false;
	for (ll i = s.size() - 1; i > 0; i--) {
		ll fu = s[i] - 48 + s[i - 1] - 48;
		if (fu > 9) {
			fk = true;
			s[i] = fu % 10 + 48;
			// debug(s[i])
			// debug(s[i-1])
			s[i - 1] = fu / 10 + 48;
			break;
		}
	}
	if (fk) {
		cout << s << endl;
		return;
	}
	string nw;
	nw += s[0] - 48 + s[1];
	for (ll i = 2; i < s.size(); ++i)
	{
		nw += s[i];

	}
	cout << nw << endl;



}
signed main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("error.txt", "w", stderr);
#endif
	ll t = 1;
	cin >> t;
	while (t--) solve();
	return 0;
}
#include <bits/stdc++.h>
#include <iostream>
// #include <string_view>
#include <string>
using namespace std;
#define endl "\n"
#define ll long long
#define array_size(type) ((char *)(&type+1)-(char*)(&type))
#define MOD 1000000007
// @defin
#define mod 998244353
#ifndef ONLINE_JUDGE
#define debug(x) cerr<<#x<<" "<<x<<endl;
#else
#define debug(x)
#endif
template<typename KeyType, typename v1ueType>
std::pair<KeyType, v1ueType> get_max( const std::map<KeyType, v1ueType>& x ) {
	using pairtype = std::pair<KeyType, v1ueType>;
	return *std::max_element(x.begin(), x.end(), [] (const pairtype & p1, const pairtype & p2) {
		return p1.second < p2.second;
	});
}
// Readme.me // CLUE HIDDEN IN STORY // PATTERN == {Practice}

void solve() {
	string s;
	cin >> s;
	bool fk = false;
	for (ll i = s.size() - 1; i > 0; i--) {
		ll fu = s[i] - 48 + s[i - 1] - 48;
		if (fu > 9) {
			fk = true;
			s[i] = fu % 10 + 48;
			// debug(s[i])
			// debug(s[i-1])
			s[i - 1] = fu / 10 + 48;
			break;
		}
	}
	if (fk) {
		cout << s << endl;
		return;
	}
	string nw;
	nw += s[0] - 48 + s[1];
	for (ll i = 2; i < s.size(); ++i)
	{
		nw += s[i];

	}
	cout << nw << endl;



}
signed main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
#ifndef ONLINE_JUDGE
	freopen("error.txt", "w", stderr);
#endif
	ll t = 1;
	cin >> t;
	while (t--) solve();
	return 0;
}
